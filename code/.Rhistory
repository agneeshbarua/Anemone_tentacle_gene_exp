#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Macdac_tent-Acte_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->MacdacActe_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
MacdacNeva<-counts_dat %>% dplyr::select(Orthogroup,Neva_tentacles1,Neva_tentacles2,Neva_tentacles3,Mado_tentacle_i1,Mado_tentacle_i2,Mado_tentacle_o1,Mado_tentacle_o2)
MacdacNeva[is.na(MacdacNeva)]<-0
MacdacNeva<-MacdacNeva %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,macdac),by = "Orthogroup")
MacdacNeva<-drop_na(MacdacNeva)
groups<-factor(c(rep("Neva_tent",3),
rep("Macdac_tent",4)))
dge<-DGEList(MacdacNeva %>% dplyr::select(!Orthogroup) %>% column_to_rownames("macdac"),
group = groups,
genes = MacdacNeva$macdac)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Macdac_tent-Neva_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->MacdacNeva_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
MacdacOula<-counts_dat %>% dplyr::select(Orthogroup,Oula_tentacles1,Oula_tentacles2,Oula_tentacles3,Mado_tentacle_i1,Mado_tentacle_i2,Mado_tentacle_o1,Mado_tentacle_o2)
MacdacOula[is.na(MacdacOula)]<-0
MacdacOula<-MacdacOula %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,macdac),by = "Orthogroup")
MacdacOula<-drop_na(MacdacOula)
groups<-factor(c(rep("Oula_tent",3),
rep("Macdac_tent",4)))
dge<-DGEList(MacdacOula %>% dplyr::select(!Orthogroup) %>% column_to_rownames("macdac"),
group = groups,
genes = MacdacOula$macdac)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Macdac_tent-Oula_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->MacdacOula_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
HemagGafu<-counts_dat %>% dplyr::select(Orthogroup,Gafu_tentacle_sw1,Gafu_tentacle_sw2,Gafu_tentacle_sw3,Hemag_tentacles1,Hemag_tentacles2,Hemag_tentacles3,Hemag_tentacles4,Hemag_tentacles5)
HemagGafu[is.na(HemagGafu)]<-0
HemagGafu<-HemagGafu %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,hema),by = "Orthogroup")
HemagGafu<-drop_na(HemagGafu)
groups<-factor(c(rep("Gafu_tent",3),
rep("Hemag_tent",5)))
dge<-DGEList(HemagGafu %>% dplyr::select(!Orthogroup) %>% column_to_rownames("hema"),
group = groups,
genes = HemagGafu$hema)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Hemag_tent-Gafu_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->HemagGafu_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
HemagGafu<-counts_dat %>% dplyr::select(Orthogroup,Gafu_tentacle_c1,Gafu_tentacle_c2,Gafu_tentacle_c3,Hemag_tentacles1,Hemag_tentacles2,Hemag_tentacles3,Hemag_tentacles4,Hemag_tentacles5)
HemagGafu[is.na(HemagGafu)]<-0
HemagGafu<-HemagGafu %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,hema),by = "Orthogroup")
HemagGafu<-drop_na(HemagGafu)
groups<-factor(c(rep("Gafu_tent",3),
rep("Hemag_tent",5)))
dge<-DGEList(HemagGafu %>% dplyr::select(!Orthogroup) %>% column_to_rownames("hema"),
group = groups,
genes = HemagGafu$hema)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Hemag_tent-Gafu_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->HemagGafu_dge_ct
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
HemagActe<-counts_dat %>% dplyr::select(Orthogroup,Acte_tentacles1,Acte_tentacles2,Acte_tentacles3,Acte_tentacles4,Acte_tentacles5,Acte_tentacles6,Hemag_tentacles1,Hemag_tentacles2,Hemag_tentacles3,Hemag_tentacles4,Hemag_tentacles5)
HemagActe[is.na(HemagActe)]<-0
HemagActe<-HemagActe %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,hema),by = "Orthogroup")
HemagActe<-drop_na(HemagActe)
groups<-factor(c(rep("Acte_tent",6),
rep("Hemag_tent",5)))
dge<-DGEList(HemagActe %>% dplyr::select(!Orthogroup) %>% column_to_rownames("hema"),
group = groups,
genes = HemagActe$hema)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Hemag_tent-Acte_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->HemagActe_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
HemagNeva<-counts_dat %>% dplyr::select(Orthogroup,Neva_tentacles1,Neva_tentacles2,Neva_tentacles3,Hemag_tentacles1,Hemag_tentacles2,Hemag_tentacles3,Hemag_tentacles4,Hemag_tentacles5)
HemagNeva[is.na(HemagNeva)]<-0
HemagNeva<-HemagNeva %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,hema),by = "Orthogroup")
HemagNeva<-drop_na(HemagNeva)
groups<-factor(c(rep("Neva_tent",3),
rep("Hemag_tent",5)))
dge<-DGEList(HemagNeva %>% dplyr::select(!Orthogroup) %>% column_to_rownames("hema"),
group = groups,
genes = HemagNeva$hema)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Hemag_tent-Neva_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->HemagNeva_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
HemagOula<-counts_dat %>% dplyr::select(Orthogroup,Oula_tentacles1,Oula_tentacles2,Oula_tentacles3,Hemag_tentacles1,Hemag_tentacles2,Hemag_tentacles3,Hemag_tentacles4,Hemag_tentacles5)
HemagOula[is.na(HemagOula)]<-0
HemagOula<-HemagOula %>% left_join(final_orth_list %>% dplyr::select(Orthogroup,hema),by = "Orthogroup")
HemagOula<-drop_na(HemagOula)
groups<-factor(c(rep("Oula_tent",3),
rep("Hemag_tent",5)))
dge<-DGEList(HemagOula %>% dplyr::select(!Orthogroup) %>% column_to_rownames("hema"),
group = groups,
genes = HemagOula$hema)
#filtering
keep<- filterByExpr(dge, min.count = 10)
summary(keep)
dge<- dge[keep,,keep.lib.sizes = F]
#Normalize using TMM
dge<-calcNormFactors(dge, method = "TMM")
#MDS
plotMD(cpm(dge, log = T),column =4)
plotMDS(dge)
## Estimate dispersion {.tabset .tabset-fade}
#to estimate dispersions with multiple factors we donstruct a design matrix.
#0+ means not to include an intercept
design <- model.matrix(~0+group, dge$samples)
colnames(design)<-levels(dge$samples$group)
dge<-estimateDisp(dge, design, robust = T)
dge$common.dispersion
plotBCV(dge)
## Determining quasi likelihood
fit<-glmQLFit(dge, design, robust = T)
head(fit$coefficients)
plotQLDisp(fit)
## Differential expression analysis
con<-makeContrasts(Hemag_tent-Oula_tent, levels = design)
qlf<- glmQLFTest(fit,contrast=con)
ttgs<-topTags(qlf,n = 1485)
tibble(gene = ttgs$table$genes,logFC = ttgs$table$logFC,fdr = ttgs$table$FDR)->HemagOula_dge
#topTags(qlf,n = 32450) %>% as.data.frame() %>%  write_csv("./0hr_48hr_anemone_contrast.csv")
## QLF-test
summary(decideTests(qlf))
plotMD(qlf)
rbind(StmerActe_dge %>% mutate(sp = "acte"),
SthadActe_dge %>% mutate(sp = "acte"),
StgagActe_dge %>% mutate(sp = "acte"),
EnquaActe_dge %>% mutate(sp = "acte"),
HecriActe_dge %>% mutate(sp = "acte"),
HeaurActe_dge %>% mutate(sp = "acte"),
HemagActe_dge %>% mutate(sp = "acte"),
StmerGafu_dge %>% mutate(sp = "gafu"),
SthadGafu_dge %>% mutate(sp = "gafu"),
StgagGafu_dge %>% mutate(sp = "gafu"),
EnquaGafu_dge %>% mutate(sp = "gafu"),
HecriGafu_dge %>% mutate(sp = "gafu"),
HeaurGafu_dge %>% mutate(sp = "gafu"),
HemagGafu_dge %>% mutate(sp = "gafu"),
StmerGafu_dge_ct %>% mutate(sp = "gafu_ct"),
SthadGafu_dge_ct %>% mutate(sp = "gafu_ct"),
StgagGafu_dge_ct %>% mutate(sp = "gafu_ct"),
EnquaGafu_dge_ct %>% mutate(sp = "gafu_ct"),
HecriGafu_dge_ct %>% mutate(sp = "gafu_ct"),
HeaurGafu_dge_ct %>% mutate(sp = "gafu_ct"),
HemagGafu_dge_ct %>% mutate(sp = "gafu_ct"),
StmerNeva_dge %>% mutate(sp = "neva"),
SthadNeva_dge %>% mutate(sp = "neva"),
StgagNeva_dge %>% mutate(sp = "neva"),
EnquaNeva_dge %>% mutate(sp = "neva"),
HecriNeva_dge %>% mutate(sp = "neva"),
HeaurNeva_dge %>% mutate(sp = "neva"),
HemagNeva_dge %>% mutate(sp = "neva"),
StmerOula_dge %>% mutate(sp = "oula"),
SthadOula_dge %>% mutate(sp = "oula"),
StgagOula_dge %>% mutate(sp = "oula"),
EnquaOula_dge %>% mutate(sp = "oula"),
HecriOula_dge %>% mutate(sp = "oula"),
HeaurOula_dge %>% mutate(sp = "oula"),
HemagActe_dge %>% mutate(sp = "oula")) %>% filter(fdr <= 0.05) -> dge_hosts_sig_dge
dge_hosts_sig_dge %>% write_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv")
library(tidyverse)
library(coseq)
library(ggsci)
final_orth_list<-read_csv("../data/orthologs/final_orth_list.csv")%>% drop_na()#%>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
final_orth_list<-read_csv("../data/orthologs/final_orth_list.csv")%>% drop_na()#%>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
dge_down<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>% dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x < 0) | !if_any(where(is.numeric), ~ .x > 0))
#Obtain the orthogroups of the up and down regulated genes
dge_orths_up<-final_orth_list %>% filter(value %in% dge_up$gene) %>% distinct(Orthogroup)
library(tidyverse)
library(coseq)
library(ggsci)
View(final_orth_list)
final_orth_list<-read_csv("../data/orthologs/final_orth_list.csv")%>% drop_na() %>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
dge_down<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>% dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x < 0) | !if_any(where(is.numeric), ~ .x > 0))
#Obtain the orthogroups of the up and down regulated genes
dge_orths_up<-final_orth_list %>% filter(value %in% dge_up$gene) %>% distinct(Orthogroup)
dge_orths_down<-final_orth_list %>% filter(value %in% dge_down$gene) %>% distinct(Orthogroup)
library(tidyverse)
library(coseq)
library(ggsci)
final_orth_list<-read_csv("./Transcriptomes/Orthologs/final_orth_list.csv")%>% drop_na()#%>% pivot_longer(!Orthogroup)
final_orth_list<-read_csv("./Transcriptomes/Orthologs/final_orth_list.csv")%>% drop_na()#%>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("./Transcriptomes/dge/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
dge_down<-read_csv("./Transcriptomes/dge/dge_all_hosts_vs_non_hosts_sig.csv") %>% dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x < 0) | !if_any(where(is.numeric), ~ .x > 0))
#Obtain the orthogroups of the up and down regulated genes
dge_orths_up<-final_orth_list %>% filter(value %in% dge_up$gene) %>% distinct(Orthogroup)
final_orth_list<-read_csv("./Transcriptomes/Orthologs/final_orth_list.csv")%>% drop_na() %>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("./Transcriptomes/dge/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
dge_down<-read_csv("./Transcriptomes/dge/dge_all_hosts_vs_non_hosts_sig.csv") %>% dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x < 0) | !if_any(where(is.numeric), ~ .x > 0))
#Obtain the orthogroups of the up and down regulated genes
dge_orths_up<-final_orth_list %>% filter(value %in% dge_up$gene) %>% distinct(Orthogroup)
dge_orths_down<-final_orth_list %>% filter(value %in% dge_down$gene) %>% distinct(Orthogroup)
library(tidyverse)
library(coseq)
library(ggsci)
final_orth_list<-read_csv("../data/orthologs/final_orth_list.csv")%>% drop_na() %>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
dge_down<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>% dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x < 0) | !if_any(where(is.numeric), ~ .x > 0))
#Obtain the orthogroups of the up and down regulated genes
dge_orths_up<-final_orth_list %>% filter(value %in% dge_up$gene) %>% distinct(Orthogroup)
dge_orths_down<-final_orth_list %>% filter(value %in% dge_down$gene) %>% distinct(Orthogroup)
final_orth_list<-read_csv("../data/orthologs/final_orth_list.csv")%>% drop_na() %>% pivot_longer(!Orthogroup)
#use dge gene, filter data to isolate genes that are consistently upregulated and downregulated in all samples
dge_up<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>%  dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x > 0) | !if_any(where(is.numeric), ~ .x < 0))
dge_down<-read_csv("../data/data_tables/dge_all_hosts_vs_non_hosts_sig.csv") %>% dplyr::select(!fdr) %>% spread(sp,logFC) %>% drop_na() %>% filter(if_all(where(is.numeric), ~ .x < 0) | !if_any(where(is.numeric), ~ .x > 0))
#Obtain the orthogroups of the up and down regulated genes
dge_orths_up<-final_orth_list %>% filter(value %in% dge_up$gene) %>% distinct(Orthogroup)
dge_orths_down<-final_orth_list %>% filter(value %in% dge_down$gene) %>% distinct(Orthogroup)
runArcsin<-readRDS("../data/rds/runArcsin_dge_up.rds")
#For downregulated data read in the runArcsin_dge_down.rds
#summary
summary(runArcsin)
plot(runArcsin, graphs="boxplots",cond = sampleNames(exp.dat) %>% gsub(pattern = "_tentacles[0-9]",replacement = "") %>% gsub(pattern = "_tentacle_i[0-9]",replacement = "") %>% gsub(pattern = "_tentacle_o[0-9]",replacement = ""),add_lines = F)->p
coseq_input<-dge_orths_up
dat<-read_csv("../data/orthologs/all_sp_all_tissue_exp_matrix_counts.csv") %>% filter(Orthogroup %in% coseq_input$Orthogroup) %>%  column_to_rownames("Orthogroup")
#get expression data for anemonefish hosting giant sea anemone
dat %>% dplyr::select(Enqua_tentacles1,
Enqua_tentacles2,
Enqua_tentacles3,
Enqua_tentacles4,
Enqua_tentacles5,
Enqua_tentacles6,
Mado_tentacle_i1,
Mado_tentacle_i2,
Mado_tentacle_o1,
Mado_tentacle_o2,
Stgag_tentacles1,
Stgag_tentacles2,
Stgag_tentacles3,
Stgag_tentacles4,
Stmer_tentacles1,
Stmer_tentacles2,
Stmer_tentacles3,
Stmer_tentacles4,
Sthad_tentacles1,
Sthad_tentacles2,
Sthad_tentacles3,
Heau_tentacles1,
Heau_tentacles2,
Heau_tentacles3,
Heau_tentacles4,
Heau_tentacles5,
Hecri_tentacles1,
Hecri_tentacles2,
Hecri_tentacles3,
Hecri_tentacles4,
Hemag_tentacles1,
Hemag_tentacles2,
Hemag_tentacles3,
Hemag_tentacles4,
Hemag_tentacles5) %>% round()->t
t[is.na(t)]<-0 #make NAs to to zero
#make these objects for coseq input
annot.df<-AnnotatedDataFrame(t(t) %>% as.data.frame())
exp.dat<-ExpressionSet(assayData = as.matrix(t))
counts <- exprs(exp.dat)
plot(runArcsin, graphs="boxplots",cond = sampleNames(exp.dat) %>% gsub(pattern = "_tentacles[0-9]",replacement = "") %>% gsub(pattern = "_tentacle_i[0-9]",replacement = "") %>% gsub(pattern = "_tentacle_o[0-9]",replacement = ""),add_lines = F)->p
p$boxplots+theme_minimal()+
scale_fill_nejm()+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
panel.grid = element_blank())
plot(runArcsin, graphs="profiles")->pp
## Covariance matrix for cluster 1
rho <- NormMixParam(runArcsin)$rho
rho1 <- rho[,,1]
colnames(rho1) <- rownames(rho1) <- paste0(colnames(rho1), "\n")
rho <- NormMixParam(runArcsin)$rho
rho2 <- rho[,,2]
colnames(rho1) <- rownames(rho1) <- paste0(colnames(rho1), "\n")
corrplot::corrplot(rho1,method = "color",tl.col = "black",tl.cex = 0.6,col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
corrplot::corrplot(rho2,method = "color",tl.col = "black",tl.cex = 0.6,col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
#use the matrix from above chunk to summarise correlations
#use number of gene in cluster (46 and 176); The patterns in the coseq cluster are different from same number of random genes
corrplot::corrplot(cor(log10(t[c(floor(runif(46,1,240))),]+1)),
method = "color",tl.col = "black",tl.cex = 0.6,
col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
#use the matrix from above chunk to summarise correlations
#use number of gene in cluster (46 and 176); The patterns in the coseq cluster are different from same number of random genes
corrplot::corrplot(cor(log10(t[c(floor(runif(46,1,240))),]+1)),
method = "color",tl.col = "black",tl.cex = 0.6,
col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
corrplot::corrplot(cor(log10(t[c(floor(runif(46,1,240))),]+1)),
method = "color",tl.col = "black",tl.cex = 0.6,
col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
#use the matrix from above chunk to summarise correlations
#use number of gene in cluster (46 and 176); The patterns in the coseq cluster are different from same number of random genes
corrplot::corrplot(cor(log10(t[c(floor(runif(46,1,222))),]+1)),
method = "color",tl.col = "black",tl.cex = 0.6,
col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
#use the matrix from above chunk to summarise correlations
#use number of gene in cluster (46 and 176); The patterns in the coseq cluster are different from same number of random genes
corrplot::corrplot(cor(log10(t[c(floor(runif(46,1,222))),]+1)),
method = "color",tl.col = "black",tl.cex = 0.6,
col = colorRampPalette(c("grey20", "white", "darkgreen"))(100))
probapost <- assay(runArcsin)
c1<-probapost %>% as.data.frame() %>% rownames_to_column("OG") %>% filter(Cluster_1 >= 0.8)
c2<-probapost %>% as.data.frame() %>% rownames_to_column("OG") %>% filter(Cluster_2 >= 0.8)
library(GOstats)
library(GO.db)
library(GSEABase)
library(AnnotationDbi)
library(RSQLite)
annot<-read_csv("../data/data_tables/GO_annot_universe.csv")
annot<-annot %>% filter(ARGOT_PPV >= 0.5)
annot$goid<-sub("^","GO:",annot$goid)
annot<-annot %>% mutate(evidence = "IEA") %>% dplyr::select(go_id = goid, evidence,gene = qpid) #keep this order
goFrame<-GOFrame(as.data.frame(annot, organism = "hosts"))
goAllFrame<-GOAllFrame(goFrame)
gsc<-GeneSetCollection(goAllFrame,setType = GOCollection())
universe<-annot$gene
read_csv("../data/orthologs/final_orth_list.csv")%>% drop_na() -> final_orth_list
#get upshift gene
c1_id<-tibble(ids= (final_orth_list %>% filter(Orthogroup %in% c1$OG) %>%
dplyr::select(c(Orthogroup,enqua,heaur,hecri,hema,hetdac,macdac,stga,stha,stmer)) %>%
pivot_longer(cols = c(!Orthogroup)))$value)
up<-GSEAGOHyperGParams(name = "GO enrich",
geneSetCollection = gsc,
geneIds = c1_id$ids,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = F,
testDirection = "over")
Over_up<- hyperGTest(up)
Over_up.pv<-pvalues(Over_up)
pv.fdr<-p.adjust(Over_up.pv,"fdr")
summary(Over_up) %>% as_tibble() %>% mutate(FDR = pv.fdr[1:nrow(summary(Over_up) %>% as_tibble())]) %>% dplyr::select(GOBPID,FDR,Term,Size) %>% filter(FDR<=0.05) -> GOenrich
#GOenrich %>% write_csv("./Transcriptomes/Annotations/GOenrich_coseq_downreg_cluster2.csv")
View(GOenrich)
